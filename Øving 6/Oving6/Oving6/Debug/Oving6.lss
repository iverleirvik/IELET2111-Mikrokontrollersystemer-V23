
Oving6.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00804000  00804000  000001cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000178  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001cc  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001fc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  0000023c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00003862  00000000  00000000  00000274  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00002e13  00000000  00000000  00003ad6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000370  00000000  00000000  000068e9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000074  00000000  00000000  00006c5c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000019ea  00000000  00000000  00006cd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000063  00000000  00000000  000086ba  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  0000871d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 7a 00 	jmp	0xf4	; 0xf4 <__ctors_end>
   4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
   8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
   c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  10:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  14:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  18:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  1c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  20:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  24:	0c 94 86 00 	jmp	0x10c	; 0x10c <__vector_9>
  28:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  2c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  30:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  34:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  38:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  3c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  40:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  44:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  48:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  4c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  50:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  54:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  58:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  5c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  60:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  64:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  68:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  6c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  70:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  74:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  78:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  7c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  80:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  84:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  88:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  8c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  90:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  94:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  98:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  9c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  a0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  a4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  a8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  ac:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  b0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  b4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  b8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  bc:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  c0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  c4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  c8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  cc:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  d0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  d4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  d8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  dc:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  e0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  e4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  e8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  ec:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  f0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>

000000f4 <__ctors_end>:
  f4:	11 24       	eor	r1, r1
  f6:	1f be       	out	0x3f, r1	; 63
  f8:	cf ef       	ldi	r28, 0xFF	; 255
  fa:	cd bf       	out	0x3d, r28	; 61
  fc:	df e7       	ldi	r29, 0x7F	; 127
  fe:	de bf       	out	0x3e, r29	; 62
 100:	0e 94 b5 00 	call	0x16a	; 0x16a <main>
 104:	0c 94 ba 00 	jmp	0x174	; 0x174 <_exit>

00000108 <__bad_interrupt>:
 108:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000010c <__vector_9>:
    {
		;
    }
}

ISR(TCA0_OVF_vect)	{
 10c:	1f 92       	push	r1
 10e:	0f 92       	push	r0
 110:	0f b6       	in	r0, 0x3f	; 63
 112:	0f 92       	push	r0
 114:	11 24       	eor	r1, r1
 116:	0b b6       	in	r0, 0x3b	; 59
 118:	0f 92       	push	r0
 11a:	8f 93       	push	r24
 11c:	9f 93       	push	r25
 11e:	ef 93       	push	r30
 120:	ff 93       	push	r31
	
	PORTB.OUT ^= PIN3_bm;
 122:	e0 e2       	ldi	r30, 0x20	; 32
 124:	f4 e0       	ldi	r31, 0x04	; 4
 126:	94 81       	ldd	r25, Z+4	; 0x04
 128:	88 e0       	ldi	r24, 0x08	; 8
 12a:	89 27       	eor	r24, r25
 12c:	84 83       	std	Z+4, r24	; 0x04
	
	TCA0.SINGLE.INTFLAGS = TCA_SINGLE_OVF_bm;
 12e:	81 e0       	ldi	r24, 0x01	; 1
 130:	80 93 0b 0a 	sts	0x0A0B, r24	; 0x800a0b <__TEXT_REGION_LENGTH__+0x7e0a0b>
}
 134:	ff 91       	pop	r31
 136:	ef 91       	pop	r30
 138:	9f 91       	pop	r25
 13a:	8f 91       	pop	r24
 13c:	0f 90       	pop	r0
 13e:	0b be       	out	0x3b, r0	; 59
 140:	0f 90       	pop	r0
 142:	0f be       	out	0x3f, r0	; 63
 144:	0f 90       	pop	r0
 146:	1f 90       	pop	r1
 148:	18 95       	reti

0000014a <tca0_INIT>:


void tca0_INIT(void)	{
	
	TCA0.SINGLE.INTCTRL = TCA_SINGLE_OVF_bm;
 14a:	e0 e0       	ldi	r30, 0x00	; 0
 14c:	fa e0       	ldi	r31, 0x0A	; 10
 14e:	81 e0       	ldi	r24, 0x01	; 1
 150:	82 87       	std	Z+10, r24	; 0x0a
	TCA0.SINGLE.CTRLA = TCA_SINGLE_ENABLE_bm | TCA_SINGLE_CLKSEL_DIV256_gc;
 152:	8d e0       	ldi	r24, 0x0D	; 13
 154:	80 83       	st	Z, r24
	TCA0.SINGLE.PERBUF = 15625;
 156:	89 e0       	ldi	r24, 0x09	; 9
 158:	9d e3       	ldi	r25, 0x3D	; 61
 15a:	86 ab       	std	Z+54, r24	; 0x36
 15c:	97 ab       	std	Z+55, r25	; 0x37
	sei();
 15e:	78 94       	sei
 160:	08 95       	ret

00000162 <led_INIT>:
}

void led_INIT(void)	{
	
	PORTB.DIRSET = PIN3_bm;
 162:	88 e0       	ldi	r24, 0x08	; 8
 164:	80 93 21 04 	sts	0x0421, r24	; 0x800421 <__TEXT_REGION_LENGTH__+0x7e0421>
 168:	08 95       	ret

0000016a <main>:
void led_INIT(void);

int main(void)
{
	
	tca0_INIT();
 16a:	0e 94 a5 00 	call	0x14a	; 0x14a <tca0_INIT>
	led_INIT();
 16e:	0e 94 b1 00 	call	0x162	; 0x162 <led_INIT>
 172:	ff cf       	rjmp	.-2      	; 0x172 <main+0x8>

00000174 <_exit>:
 174:	f8 94       	cli

00000176 <__stop_program>:
 176:	ff cf       	rjmp	.-2      	; 0x176 <__stop_program>
