
Oving6_3_a.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00804000  00804000  000001d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000184  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001d8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000208  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  00000248  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00003a60  00000000  00000000  00000278  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00002e7e  00000000  00000000  00003cd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003f1  00000000  00000000  00006b56  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  00006f48  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00001c2c  00000000  00000000  00006f8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000048  00000000  00000000  00008bb8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  00008c00  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 7a 00 	jmp	0xf4	; 0xf4 <__ctors_end>
   4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
   8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
   c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  10:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  14:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  18:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  1c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  20:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  24:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  28:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  2c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  30:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  34:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  38:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  3c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  40:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  44:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  48:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  4c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  50:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  54:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  58:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  5c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  60:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  64:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  68:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  6c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  70:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  74:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  78:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  7c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  80:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  84:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  88:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  8c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  90:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  94:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  98:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  9c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  a0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  a4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  a8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  ac:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  b0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  b4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  b8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  bc:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  c0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  c4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  c8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  cc:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  d0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  d4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  d8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  dc:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  e0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  e4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  e8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  ec:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  f0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>

000000f4 <__ctors_end>:
  f4:	11 24       	eor	r1, r1
  f6:	1f be       	out	0x3f, r1	; 63
  f8:	cf ef       	ldi	r28, 0xFF	; 255
  fa:	cd bf       	out	0x3d, r28	; 61
  fc:	df e7       	ldi	r29, 0x7F	; 127
  fe:	de bf       	out	0x3e, r29	; 62
 100:	0e 94 a1 00 	call	0x142	; 0x142 <main>
 104:	0c 94 c0 00 	jmp	0x180	; 0x180 <_exit>

00000108 <__bad_interrupt>:
 108:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000010c <tca0_init>:
		_delay_ms(500);
    }
}

void tca0_init(void)	{
	PORTMUX.TCAROUTEA = PORTMUX_TCA0_PORTD_gc;
 10c:	83 e0       	ldi	r24, 0x03	; 3
 10e:	80 93 e6 05 	sts	0x05E6, r24	; 0x8005e6 <__TEXT_REGION_LENGTH__+0x7e05e6>
	TCA0.SINGLE.CTRLB = TCA_SINGLE_CMP0EN_bm	|	TCA_SINGLE_WGMODE_DSBOTTOM_gc;
 112:	e0 e0       	ldi	r30, 0x00	; 0
 114:	fa e0       	ldi	r31, 0x0A	; 10
 116:	87 e1       	ldi	r24, 0x17	; 23
 118:	81 83       	std	Z+1, r24	; 0x01
	TCA0.SINGLE.EVCTRL &= ~(TCA_SINGLE_CNTAEI_bm);
 11a:	81 85       	ldd	r24, Z+9	; 0x09
 11c:	8e 7f       	andi	r24, 0xFE	; 254
 11e:	81 87       	std	Z+9, r24	; 0x09
	TCA0.SINGLE.PERBUF = 0x02EE;	//0x01F4; Periode
 120:	8e ee       	ldi	r24, 0xEE	; 238
 122:	92 e0       	ldi	r25, 0x02	; 2
 124:	86 ab       	std	Z+54, r24	; 0x36
 126:	97 ab       	std	Z+55, r25	; 0x37
	TCA0.SINGLE.CMP0BUF = 0x2710;	// Duty cycle
 128:	80 e1       	ldi	r24, 0x10	; 16
 12a:	97 e2       	ldi	r25, 0x27	; 39
 12c:	80 af       	std	Z+56, r24	; 0x38
 12e:	91 af       	std	Z+57, r25	; 0x39
	TCA0.SINGLE.CTRLA = TCA_SINGLE_CLKSEL_DIV4_gc	|	TCA_SINGLE_ENABLE_bm;
 130:	85 e0       	ldi	r24, 0x05	; 5
 132:	80 83       	st	Z, r24
 134:	08 95       	ret

00000136 <led_init>:
	}

void led_init(void)	{
	PORTD.DIR |= PIN0_bm;
 136:	e0 e6       	ldi	r30, 0x60	; 96
 138:	f4 e0       	ldi	r31, 0x04	; 4
 13a:	80 81       	ld	r24, Z
 13c:	81 60       	ori	r24, 0x01	; 1
 13e:	80 83       	st	Z, r24
 140:	08 95       	ret

00000142 <main>:
void tca0_init(void);
void led_init(void);

int main(void)
{
	tca0_init();
 142:	0e 94 86 00 	call	0x10c	; 0x10c <tca0_init>
	led_init();
 146:	0e 94 9b 00 	call	0x136	; 0x136 <led_init>
	
	
    /* Replace with your application code */
    while (1) 
    {
		TCA0.SINGLE.CMP0BUF = 0x00;	// 0x0032
 14a:	e0 e0       	ldi	r30, 0x00	; 0
 14c:	fa e0       	ldi	r31, 0x0A	; 10
 14e:	10 ae       	std	Z+56, r1	; 0x38
 150:	11 ae       	std	Z+57, r1	; 0x39
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 152:	2f e7       	ldi	r18, 0x7F	; 127
 154:	8a e1       	ldi	r24, 0x1A	; 26
 156:	96 e0       	ldi	r25, 0x06	; 6
 158:	21 50       	subi	r18, 0x01	; 1
 15a:	80 40       	sbci	r24, 0x00	; 0
 15c:	90 40       	sbci	r25, 0x00	; 0
 15e:	e1 f7       	brne	.-8      	; 0x158 <main+0x16>
 160:	00 c0       	rjmp	.+0      	; 0x162 <main+0x20>
 162:	00 00       	nop
		_delay_ms(500);
		TCA0.SINGLE.CMP0BUF = 0xFF;	// 0x00D0
 164:	8f ef       	ldi	r24, 0xFF	; 255
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	80 af       	std	Z+56, r24	; 0x38
 16a:	91 af       	std	Z+57, r25	; 0x39
 16c:	2f e7       	ldi	r18, 0x7F	; 127
 16e:	8a e1       	ldi	r24, 0x1A	; 26
 170:	96 e0       	ldi	r25, 0x06	; 6
 172:	21 50       	subi	r18, 0x01	; 1
 174:	80 40       	sbci	r24, 0x00	; 0
 176:	90 40       	sbci	r25, 0x00	; 0
 178:	e1 f7       	brne	.-8      	; 0x172 <main+0x30>
 17a:	00 c0       	rjmp	.+0      	; 0x17c <main+0x3a>
 17c:	00 00       	nop
 17e:	e5 cf       	rjmp	.-54     	; 0x14a <main+0x8>

00000180 <_exit>:
 180:	f8 94       	cli

00000182 <__stop_program>:
 182:	ff cf       	rjmp	.-2      	; 0x182 <__stop_program>
